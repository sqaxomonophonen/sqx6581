.word $0801
.org  $0801

.scope
	.word _next, 10         ; Next line and current line number
	.byte $9e," 2062",0     ; SYS 2064
_next:	.word 0                 ; End of program
.scend

.advance 2062

;	bgcolor=black
	lda	#0
	sta	$d021

;	clear screen and set text color to white
	ldx	#0
*
	lda	#96
 	sta	$0400,x
	sta	$0500,x
	sta	$0600,x
	sta	[$0700-24],x
	lda	#1
	sta	$d800,x
	sta	$d900,x
	sta	$da00,x
	sta	[$db00-24],x
	inx
	bne	-

	lda	#0
	jsr	sqx_init

	sei
	lda	#<irq
	ldx	#>irq
	sta	$314
	stx	$315
	lda	#$1b
	sta	$d011
	lda	#$01
	sta	$d01a
	lda	#$7f
	sta	$dc0d
	cli

foreva:	jmp	foreva


hex:	.byte	48,49,50,51,52,53,54,55,56,57,1,2,3,4,5,6
prgtmp:	.word	0


printhex:	; X=value, screen: $0400,y
	sty	prgtmp

	txa
	lsr
	lsr
	lsr
	lsr
	tay
	lda	hex,y
	ldy	prgtmp
	sta	$0400,y

	txa
	and	#$0f
	tay
	lda	hex,y
	ldy	prgtmp
	sta	$0401,y

	rts

.macro	printaddr
	ldx	#_1+1+[_2*2]
	lda	0,x
	tax
	ldy	#[3+_2*9+_3*40]
	jsr	printhex

	ldx	#_1+0+[_2*2]
	lda	0,x
	tax
	ldy	#[3+2+_2*9+_3*40]
	jsr	printhex

	ldy	#[3+4+_2*9+_3*40]
	lda	#58
	sta	$0400,y

	ldx	#[_2*2]
	lda	(_1,x)
	tax
	ldy	#[3+5+_2*9+_3*40]
	jsr	printhex
.macend

.macro	print16
	lda	_1+1
	tax
	ldy	#[3+_2*9+_3*40]
	jsr	printhex

	lda	_1
	tax
	ldy	#[3+2+_2*9+_3*40]
	jsr	printhex
.macend

write_info:
	`printaddr	zp_tptr, 0, 1
	`printaddr	zp_tptr, 1, 1
	`printaddr	zp_tptr, 2, 1
	`printaddr	zp_tptr, 3, 1

	`printaddr	zp_pptr, 0, 2
	`printaddr	zp_pptr, 1, 2
	`printaddr	zp_pptr, 2, 2
	`printaddr	zp_pptr, 3, 2

	`print16	sqx_twait+0, 0, 3
	`print16	sqx_twait+2, 1, 3
	`print16	sqx_twait+4, 2, 3
	`print16	sqx_twait+6, 3, 3


	rts


irq:
	lda	#$01
	sta	$d019
	lda	#$3c
	sta	$d012

	jsr	write_info
	jsr	sqx_tick

	lda	#$14
	sta	$d018
	jmp	$ea31



.macro bcolor
	lda	#_1
	sta	$d020
.macend

.include "sqx.oph"

